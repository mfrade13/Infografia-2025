{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nancy\\\\Documents\\\\UNIVERSIDAD\\\\SEPTIMO_SEMESTRE\\\\INFOGRAFIA\\\\object-detection-app\\\\frontend\\\\src\\\\components\\\\WebcamDetector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react'; // Hooks de React\nimport socketio from 'socket.io-client'; // Cliente Socket.IO\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WebcamDetector({\n  onDetection\n}) {\n  _s();\n  // Estados del componente\n  const [isDetecting, setIsDetecting] = useState(false); // Estado de detección\n  const [fps, setFps] = useState(10); // Frames por segundo\n  const videoRef = useRef(null); // Referencia al elemento video\n  const socketRef = useRef(null); // Referencia al socket\n  const frameQueue = useRef([]); // Cola de frames\n  const lastFrameTime = useRef(0); // Último tiempo de frame\n  const animationFrameId = useRef(null); // ID de animación\n\n  // Procesar cola de frames para mayor fluidez\n  const processFrameQueue = () => {\n    const now = performance.now(); // Tiempo actual\n    const minFrameInterval = 1000 / fps; // Intervalo mínimo entre frames\n\n    // Si hay frames y ha pasado el intervalo mínimo\n    if (frameQueue.current.length > 0 && now - lastFrameTime.current >= minFrameInterval) {\n      const frameData = frameQueue.current.shift(); // Obtener frame más antiguo\n      if (videoRef.current) {\n        // Actualizar fuente del video\n        videoRef.current.src = `data:image/jpeg;base64,${frameData.frame}`;\n      }\n      if (onDetection) {\n        // Pasar datos al componente padre\n        onDetection({\n          type: 'video',\n          frame: `data:image/jpeg;base64,${frameData.frame}`,\n          results: frameData.results,\n          timestamp: frameData.timestamp\n        });\n      }\n      lastFrameTime.current = now; // Actualizar último tiempo\n    }\n\n    // Programar próximo procesamiento\n    animationFrameId.current = requestAnimationFrame(processFrameQueue);\n  };\n\n  // Efecto para iniciar/limpiar el procesamiento de frames\n  useEffect(() => {\n    // Iniciar procesamiento\n    animationFrameId.current = requestAnimationFrame(processFrameQueue);\n    return () => {\n      // Limpiar al desmontar\n      if (animationFrameId.current) {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n    };\n  }, [fps]); // Dependencia: fps\n\n  // Efecto para configurar Socket.IO\n  useEffect(() => {\n    // Conectar al servidor Socket.IO\n    socketRef.current = socketio('http://localhost:5000', {\n      transports: ['websocket'],\n      // Usar solo WebSockets\n      upgrade: false // No hacer upgrade de protocolo\n    });\n\n    // Escuchar eventos de video_frame\n    socketRef.current.on('video_frame', data => {\n      // Limitar cola a 3 frames para evitar retrasos\n      if (frameQueue.current.length < 3) {\n        frameQueue.current.push(data);\n      }\n    });\n    return () => {\n      // Desconectar al desmontar\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []); // Sin dependencias (solo al montar)\n\n  // Alternar detección\n  const toggleDetection = () => {\n    if (isDetecting) {\n      // Detener\n      socketRef.current.emit('stop_video');\n    } else {\n      // Iniciar (limpiar cola primero)\n      frameQueue.current = [];\n      socketRef.current.emit('start_video', {\n        fps\n      });\n    }\n    setIsDetecting(!isDetecting); // Cambiar estado\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"webcam-detector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-time Object Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: videoRef,\n        alt: \"Live camera feed\",\n        style: {\n          maxWidth: '100%',\n          border: '2px solid #333',\n          borderRadius: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDetection,\n        className: \"detection-button\",\n        children: isDetecting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pulse-icon\",\n            children: \"\\u25CF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), \" Stop Detection\"]\n        }, void 0, true) : 'Start Detection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fps-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Detection FPS: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"15\",\n          value: fps,\n          onChange: e => setFps(parseInt(e.target.value)),\n          disabled: isDetecting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fps-value\",\n          children: fps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(WebcamDetector, \"vMDYMf4y5FoUqIG35m5TyKm4Lrk=\");\n_c = WebcamDetector;\nexport default WebcamDetector; // Exportar componente\nvar _c;\n$RefreshReg$(_c, \"WebcamDetector\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socketio","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamDetector","onDetection","_s","isDetecting","setIsDetecting","fps","setFps","videoRef","socketRef","frameQueue","lastFrameTime","animationFrameId","processFrameQueue","now","performance","minFrameInterval","current","length","frameData","shift","src","frame","type","results","timestamp","requestAnimationFrame","cancelAnimationFrame","transports","upgrade","on","data","push","disconnect","toggleDetection","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","alt","style","maxWidth","border","borderRadius","onClick","min","max","value","onChange","e","parseInt","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Nancy/Documents/UNIVERSIDAD/SEPTIMO_SEMESTRE/INFOGRAFIA/object-detection-app/frontend/src/components/WebcamDetector.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';  // Hooks de React\r\nimport socketio from 'socket.io-client';  // Cliente Socket.IO\r\n\r\nfunction WebcamDetector({ onDetection }) {\r\n  // Estados del componente\r\n  const [isDetecting, setIsDetecting] = useState(false);  // Estado de detección\r\n  const [fps, setFps] = useState(10);  // Frames por segundo\r\n  const videoRef = useRef(null);  // Referencia al elemento video\r\n  const socketRef = useRef(null);  // Referencia al socket\r\n  const frameQueue = useRef([]);  // Cola de frames\r\n  const lastFrameTime = useRef(0);  // Último tiempo de frame\r\n  const animationFrameId = useRef(null);  // ID de animación\r\n\r\n  // Procesar cola de frames para mayor fluidez\r\n  const processFrameQueue = () => {\r\n    const now = performance.now();  // Tiempo actual\r\n    const minFrameInterval = 1000 / fps;  // Intervalo mínimo entre frames\r\n    \r\n    // Si hay frames y ha pasado el intervalo mínimo\r\n    if (frameQueue.current.length > 0 && now - lastFrameTime.current >= minFrameInterval) {\r\n      const frameData = frameQueue.current.shift();  // Obtener frame más antiguo\r\n      if (videoRef.current) {\r\n        // Actualizar fuente del video\r\n        videoRef.current.src = `data:image/jpeg;base64,${frameData.frame}`;\r\n      }\r\n      if (onDetection) {\r\n        // Pasar datos al componente padre\r\n        onDetection({\r\n          type: 'video',\r\n          frame: `data:image/jpeg;base64,${frameData.frame}`,\r\n          results: frameData.results,\r\n          timestamp: frameData.timestamp\r\n        });\r\n      }\r\n      lastFrameTime.current = now;  // Actualizar último tiempo\r\n    }\r\n    \r\n    // Programar próximo procesamiento\r\n    animationFrameId.current = requestAnimationFrame(processFrameQueue);\r\n  };\r\n\r\n  // Efecto para iniciar/limpiar el procesamiento de frames\r\n  useEffect(() => {\r\n    // Iniciar procesamiento\r\n    animationFrameId.current = requestAnimationFrame(processFrameQueue);\r\n    \r\n    return () => {\r\n      // Limpiar al desmontar\r\n      if (animationFrameId.current) {\r\n        cancelAnimationFrame(animationFrameId.current);\r\n      }\r\n    };\r\n  }, [fps]);  // Dependencia: fps\r\n\r\n  // Efecto para configurar Socket.IO\r\n  useEffect(() => {\r\n    // Conectar al servidor Socket.IO\r\n    socketRef.current = socketio('http://localhost:5000', {\r\n      transports: ['websocket'],  // Usar solo WebSockets\r\n      upgrade: false  // No hacer upgrade de protocolo\r\n    });\r\n    \r\n    // Escuchar eventos de video_frame\r\n    socketRef.current.on('video_frame', (data) => {\r\n      // Limitar cola a 3 frames para evitar retrasos\r\n      if (frameQueue.current.length < 3) {\r\n        frameQueue.current.push(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      // Desconectar al desmontar\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);  // Sin dependencias (solo al montar)\r\n\r\n  // Alternar detección\r\n  const toggleDetection = () => {\r\n    if (isDetecting) {\r\n      // Detener\r\n      socketRef.current.emit('stop_video');\r\n    } else {\r\n      // Iniciar (limpiar cola primero)\r\n      frameQueue.current = [];\r\n      socketRef.current.emit('start_video', { fps });\r\n    }\r\n    setIsDetecting(!isDetecting);  // Cambiar estado\r\n  };\r\n\r\n  return (\r\n    <div className=\"webcam-detector\">\r\n      <h2>Real-time Object Detection</h2>\r\n      \r\n      <div className=\"video-container\">\r\n        {/* Elemento para mostrar el video */}\r\n        <img \r\n          ref={videoRef}\r\n          alt=\"Live camera feed\"\r\n          style={{ \r\n            maxWidth: '100%',\r\n            border: '2px solid #333',\r\n            borderRadius: '4px'\r\n          }}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"controls\">\r\n        {/* Botón para iniciar/detener */}\r\n        <button onClick={toggleDetection} className=\"detection-button\">\r\n          {isDetecting ? (\r\n            <>\r\n              <span className=\"pulse-icon\">●</span> Stop Detection\r\n            </>\r\n          ) : (\r\n            'Start Detection'\r\n          )}\r\n        </button>\r\n        \r\n        {/* Control de FPS */}\r\n        <div className=\"fps-control\">\r\n          <label>Detection FPS: </label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"1\" \r\n            max=\"15\" \r\n            value={fps} \r\n            onChange={(e) => setFps(parseInt(e.target.value))}\r\n            disabled={isDetecting}\r\n          />\r\n          <span className=\"fps-value\">{fps}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebcamDetector;  // Exportar componente"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}