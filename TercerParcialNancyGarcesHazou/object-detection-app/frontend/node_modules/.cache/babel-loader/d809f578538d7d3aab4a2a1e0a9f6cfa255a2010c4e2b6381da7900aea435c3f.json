{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nancy\\\\Documents\\\\UNIVERSIDAD\\\\SEPTIMO_SEMESTRE\\\\INFOGRAFIA\\\\object-detection-app\\\\frontend\\\\src\\\\components\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Importar React y useState hook\nimport axios from 'axios'; // Para hacer peticiones HTTP\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader({\n  onDetection\n}) {\n  _s();\n  // Estados del componente\n  const [file, setFile] = useState(null); // Archivo seleccionado\n  const [previewUrl, setPreviewUrl] = useState(null); // URL de previsualización\n  const [isLoading, setIsLoading] = useState(false); // Estado de carga\n\n  // Manejador de cambio de archivo\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0]; // Obtener archivo seleccionado\n    setFile(selectedFile); // Actualizar estado\n\n    // Mostrar previsualización\n    if (selectedFile) {\n      const reader = new FileReader(); // Crear lector de archivos\n      reader.onloadend = () => {\n        // Cuando termine de leer\n        setPreviewUrl(reader.result); // Actualizar URL de previsualización\n      };\n      reader.readAsDataURL(selectedFile); // Leer como URL de datos\n    } else {\n      setPreviewUrl(null); // Limpiar previsualización\n    }\n  };\n\n  // Manejador de envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevenir comportamiento por defecto\n    if (!file) return; // Si no hay archivo, salir\n\n    setIsLoading(true); // Activar estado de carga\n    const formData = new FormData(); // Crear formulario para enviar\n    formData.append('file', file); // Agregar archivo\n\n    try {\n      // Enviar archivo al backend\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Especificar tipo de contenido\n        }\n      });\n\n      // Pasar resultados al componente padre\n      onDetection({\n        type: 'image',\n        // Tipo de detección (imagen)\n        original: response.data.original_image,\n        // Ruta imagen original\n        processed: response.data.processed_image,\n        // Ruta imagen procesada\n        results: response.data.results // Resultados de detección\n      });\n    } catch (error) {\n      console.error('Error:', error); // Manejar errores\n    } finally {\n      setIsLoading(false); // Desactivar estado de carga\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !file || isLoading,\n        children: isLoading ? 'Processing...' : 'Detect Objects'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Image Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewUrl,\n        alt: \"Preview\",\n        style: {\n          maxWidth: '100%',\n          maxHeight: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"eb3aE4Rt3cfMRbgLvx1FEKCK8ws=\");\n_c = ImageUploader;\nexport default ImageUploader; // Exportar componente\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","onDetection","_s","file","setFile","previewUrl","setPreviewUrl","isLoading","setIsLoading","handleFileChange","e","selectedFile","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","type","original","data","original_image","processed","processed_image","results","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","accept","disabled","src","alt","style","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["C:/Users/Nancy/Documents/UNIVERSIDAD/SEPTIMO_SEMESTRE/INFOGRAFIA/object-detection-app/frontend/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';  // Importar React y useState hook\r\nimport axios from 'axios';  // Para hacer peticiones HTTP\r\n\r\nfunction ImageUploader({ onDetection }) {\r\n  // Estados del componente\r\n  const [file, setFile] = useState(null);  // Archivo seleccionado\r\n  const [previewUrl, setPreviewUrl] = useState(null);  // URL de previsualización\r\n  const [isLoading, setIsLoading] = useState(false);  // Estado de carga\r\n\r\n  // Manejador de cambio de archivo\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];  // Obtener archivo seleccionado\r\n    setFile(selectedFile);  // Actualizar estado\r\n    \r\n    // Mostrar previsualización\r\n    if (selectedFile) {\r\n      const reader = new FileReader();  // Crear lector de archivos\r\n      reader.onloadend = () => {  // Cuando termine de leer\r\n        setPreviewUrl(reader.result);  // Actualizar URL de previsualización\r\n      };\r\n      reader.readAsDataURL(selectedFile);  // Leer como URL de datos\r\n    } else {\r\n      setPreviewUrl(null);  // Limpiar previsualización\r\n    }\r\n  };\r\n\r\n  // Manejador de envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevenir comportamiento por defecto\r\n    if (!file) return;  // Si no hay archivo, salir\r\n\r\n    setIsLoading(true);  // Activar estado de carga\r\n    const formData = new FormData();  // Crear formulario para enviar\r\n    formData.append('file', file);  // Agregar archivo\r\n\r\n    try {\r\n      // Enviar archivo al backend\r\n      const response = await axios.post('http://localhost:5000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'  // Especificar tipo de contenido\r\n        }\r\n      });\r\n      \r\n      // Pasar resultados al componente padre\r\n      onDetection({\r\n        type: 'image',  // Tipo de detección (imagen)\r\n        original: response.data.original_image,  // Ruta imagen original\r\n        processed: response.data.processed_image,  // Ruta imagen procesada\r\n        results: response.data.results  // Resultados de detección\r\n      });\r\n    } catch (error) {\r\n      console.error('Error:', error);  // Manejar errores\r\n    } finally {\r\n      setIsLoading(false);  // Desactivar estado de carga\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uploader\">\r\n      <h2>Upload Image</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Input para seleccionar archivo */}\r\n        <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\r\n        {/* Botón de envío */}\r\n        <button type=\"submit\" disabled={!file || isLoading}>\r\n          {isLoading ? 'Processing...' : 'Detect Objects'}\r\n        </button>\r\n      </form>\r\n      \r\n      {/* Mostrar previsualización si existe */}\r\n      {previewUrl && (\r\n        <div className=\"preview-section\">\r\n          <h4>Image Preview:</h4>\r\n          <img \r\n            src={previewUrl} \r\n            alt=\"Preview\" \r\n            style={{ maxWidth: '100%', maxHeight: '200px' }} \r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploader;  // Exportar componente"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}